image: maven:3.9-openjdk-21

variables:

  # For EBI you need to override the definition of CI_REGISTRY to remove the port number
  CI_REGISTRY: dockerhub.ebi.ac.uk
  CI_REGISTRY_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH

  MAVEN_SETTINGS_FILE: ".maven-settings.xml"

  MAVEN_CLI_OPTS: "-B -ntp" # Batch mode, no transfer progress

  IMAGE_NAME: "docker.io/$DOCKER_HUB_USER/$DOCKER_HUB_REPO"

  CI_IMAGE_TAG_DEV: "dev"

before_script:
  - echo "Generating Maven settings.xml..."
  - echo "<settings>
    <servers>
    <server>
    <id>${MAVEN_SERVER_ID}</id>
    <username>${MAVEN_USERNAME}</username>
    <password>${MAVEN_PASSWORD}</password>
    </server>
    </servers>
    <profiles> 
    <profile> 
    <id>${MAVEN_SERVER_ID}</id> 
    <activation> 
    <activeByDefault>true</activeByDefault> </activation> 
    <properties> <gpg.executable>gpg2</gpg.executable> <gpg.passphrase>$GPG_PASSPHRASE</gpg.passphrase></properties>
    </profile> 
    </profiles>
    </settings>" > $MAVEN_SETTINGS_FILE

stages:
  - build
  - publish-docker
  - publish-maven

build-maven:
  stage: build
  script:
    - echo "Building Maven project..."
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then
      mvn $MAVEN_CLI_OPTS versions:set -DnewVersion=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml | sed 's/-SNAPSHOT//');
      fi
    - mvn $MAVEN_CLI_OPTS clean install
  artifacts:
    paths:
      - target/
  only:
    refs:
      - develop
      - main
      - /^release\/.*$/

publish-docker-dev:
  stage: publish-docker
  script:
    - echo "Building and pushing dev Docker image with Jib..."
    - |
      mvn jib:build \
        -Djib.to.image=$IMAGE_NAME:$CI_IMAGE_TAG_DEV \
        -Djib.to.auth.username=$DOCKER_HUB_USER \
        -Djib.to.auth.password=$DOCKER_HUB_TOKEN \
        -Djib.to.tags=$CI_IMAGE_TAG_DEV
  dependencies:
    - build-maven  # Ensure Docker image build depends on Maven build
  only:
    refs:
      - develop

publish-docker-prod:
  stage: publish-docker
  script:
    - echo "Building and pushing prod Docker image with Jib..."
    - echo "Extracting version from pom.xml..."
    - VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
    - |
      mvn jib:build \
        -Djib.to.image=$IMAGE_NAME:$CI_IMAGE_TAG_DEV \
        -Djib.to.auth.username=$DOCKER_HUB_USER \
        -Djib.to.auth.password=$DOCKER_HUB_TOKEN \
        -Djib.to.tags=$CI_IMAGE_TAG_DEV
  dependencies:
    - build-maven  # Ensure Docker image build depends on Maven build
  only:
    refs:
      - /^release\/.*$/

publish-maven:
  stage: publish-maven
  script:
    - echo "Publishing Maven artifact..."
    - yum list gnupg2
    - yum install -y gnupg2
    - gpg --version
    - echo "$GPG_PRIVATE_KEY" | gpg --import
    - echo "$GPG_PASSPHRASE" | gpg --batch --passphrase-fd 0 --pinentry-mode loopback
    - mvn $MAVEN_CLI_OPTS clean deploy -P release
  only:
    - /^release\/.*$/
  variables:
    GPG_TTY: $(tty)

